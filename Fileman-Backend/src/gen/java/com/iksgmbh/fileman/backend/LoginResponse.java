package com.iksgmbh.fileman.backend;

import java.lang.Boolean;
import java.lang.String;

import javax.validation.constraints.*;
import javax.persistence.*;

import io.swagger.annotations.*;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * This file is autogenerated by MOGLiCC. Do not modify manually!
 */
public class LoginResponse
{
	// ===============  instance fields  ===============

	private String errorMessage;

	private String authToken;

	private Boolean ok;


	// ===============  setter methods  ===============

	public void setErrorMessage(final String errorMessage)
	{
		this.errorMessage = errorMessage;
	}

	public void setAuthToken(final String authToken)
	{
		this.authToken = authToken;
	}

	public void setOk(final Boolean ok)
	{
		this.ok = ok;
	}

	// ===============  getter methods  ===============

	public String getErrorMessage()
	{
		return errorMessage;
	}

	public String getAuthToken()
	{
		return authToken;
	}

	public Boolean getOk()
	{
		return ok;
	}

	// ===============  additional Javabean methods  ===============

	@Override
	public String toString()
	{
		return "LoginResponse ["
				+ "errorMessage = " + errorMessage + ", "
				+ "authToken = " + authToken + ", "
				+ "ok = " + ok + ""
				+ "]";
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;

		final LoginResponse other = (LoginResponse) obj;

		if (errorMessage == null)
		{
			if (other.errorMessage != null)
				return false;
		} else
		{
			if (! errorMessage.equals(other.errorMessage))
				   return false;
		}
		if (authToken == null)
		{
			if (other.authToken != null)
				return false;
		} else
		{
			if (! authToken.equals(other.authToken))
				   return false;
		}
		if (ok == null)
		{
			if (other.ok != null)
				return false;
		} else
		{
			if (! ok.equals(other.ok))
				   return false;
		}
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;

		result = prime * result + ((errorMessage == null) ? 0 : errorMessage.hashCode());
		result = prime * result + ((authToken == null) ? 0 : authToken.hashCode());
		result = prime * result + ((ok == null) ? 0 : ok.hashCode());

		return result;
	}


	public void merge(LoginResponse otherLoginResponse)
	{
        if (otherLoginResponse.getErrorMessage() != null) {
            if(! otherLoginResponse.getErrorMessage().isEmpty()) {
           	 this.setErrorMessage(otherLoginResponse.getErrorMessage());
            }
       }
        if (otherLoginResponse.getAuthToken() != null) {
            if(! otherLoginResponse.getAuthToken().isEmpty()) {
           	 this.setAuthToken(otherLoginResponse.getAuthToken());
            }
       }
        if (otherLoginResponse.getOk() != null) {
            this.setOk(otherLoginResponse.getOk());
       }
	}
}