package com.iksgmbh.fileman.backend.dao;

import java.util.List;

import org.springframework.stereotype.Component;

import com.iksgmbh.fileman.backend.FavouriteSetting;

import javax.persistence.*;
import javax.persistence.criteria.*;

import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

@Component
/**
 * Implementation of basic dao functionalities.
 * This file is autogenerated by MOGLiCC. Do not modify manually!
 */
@Repository
@Transactional
public class FavouriteSettingBasicDao
{
	@PersistenceContext
	protected EntityManager entityManager;

	public List<FavouriteSetting> findAllFavouriteSettings() {
		CriteriaQuery<FavouriteSetting> criteria = entityManager.getCriteriaBuilder().createQuery(FavouriteSetting.class);
		criteria.select(criteria.from(FavouriteSetting.class));
		return entityManager.createQuery(criteria).getResultList();
	}

	public FavouriteSetting findById(Integer id) {
		return entityManager.find(FavouriteSetting.class, id);
	}
	public boolean update(FavouriteSetting entity)
	{
		try {
			entityManager.persist(entity);
			return true;
		} catch (Exception e) {
			return false;
		}
	}

	public List<FavouriteSetting> findAllForUsername(String toSearch)
	{
        return null; // TODO really needed ?
	}


	public List<FavouriteSetting> findAllForFilename(String toSearch)
	{
        return null; // TODO really needed ?
	}


	public FavouriteSetting create(FavouriteSetting entity) {
		entityManager.persist(entity);
		return entity;
	}

	public void delete(FavouriteSetting entity) {
		entityManager.remove(entity);
	}
}