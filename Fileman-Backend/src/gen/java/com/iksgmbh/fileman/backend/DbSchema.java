package com.iksgmbh.fileman.backend;

import java.lang.String;
import java.util.Date;

import javax.validation.constraints.*;
import javax.persistence.*;

import io.swagger.annotations.*;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * This file is autogenerated by MOGLiCC. Do not modify manually!
 */
@Entity
@Table(name="DB_SCHEMA")
public class DbSchema
{
	// ===============  instance fields  ===============

    @NotNull(message="Value of mandatory attribute 'creationDate' is not present.")
    @ApiModelProperty(notes = "Mandatory.")
    @Column(name="CREATION_DATE", columnDefinition="datetime")
    @Id
    private Date creationDate;

    @NotNull(message="Value of mandatory attribute 'sql' is not present.")
    @ApiModelProperty(notes = "Mandatory.")
    @Column(name="SQL", columnDefinition="varchar")
    private String sql;


	// ===============  setter methods  ===============

	public void setCreationDate(final Date creationDate)
	{
		this.creationDate = creationDate;
	}

	public void setSql(final String sql)
	{
		this.sql = sql;
	}

	// ===============  getter methods  ===============

	public Date getCreationDate()
	{
		return creationDate;
	}

	public String getSql()
	{
		return sql;
	}

	// ===============  additional Javabean methods  ===============

	@Override
	public String toString()
	{
		return "DbSchema ["
				+ "creationDate = " + creationDate + ", "
				+ "sql = " + sql + ""
				+ "]";
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;

		final DbSchema other = (DbSchema) obj;

		if (creationDate == null)
		{
			if (other.creationDate != null)
				return false;
		} else
		{
			if (! creationDate.equals(other.creationDate))
				   return false;
		}
		if (sql == null)
		{
			if (other.sql != null)
				return false;
		} else
		{
			if (! sql.equals(other.sql))
				   return false;
		}
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;

		result = prime * result + ((creationDate == null) ? 0 : creationDate.hashCode());
		result = prime * result + ((sql == null) ? 0 : sql.hashCode());

		return result;
	}


	public void merge(DbSchema otherDbSchema)
	{
        if (otherDbSchema.getCreationDate() != null) {
            this.setCreationDate(otherDbSchema.getCreationDate());
       }
        if (otherDbSchema.getSql() != null) {
            if(! otherDbSchema.getSql().isEmpty()) {
           	 this.setSql(otherDbSchema.getSql());
            }
       }
	}
}